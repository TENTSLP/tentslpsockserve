<html>
<head>
<title>Sockserve Fountainhead</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC');
@import url('https://fonts.googleapis.com/css?family=Inconsolata');
body {
  font-family: 'Noto Sans TC', sans-serif;
  font-size: 12px;
  margin: 0;
  background: #202124;
}
.content {
  border-bottom: 1px rgba(255,255,255,0.1) solid;
}
.container {
  background: #fff6d4;
  color: white;
}
header {
  display: flex;
  border-bottom: #eae1bd;
}
.flexible {
  flex-grow: 1;
}
header > a {
  display: inline-block;
  color: #464646;
  font-family: "Helvetica Neue", helvetica, arial;
  font-size: 12px;
  text-decoration: none;
  font-weight: bold;
}
header > .item {
  border-left: 1px solid rgba(255,255,255,0.3);
  padding: 0 10px;
  margin: 10px 0;
}
header > .dark {
  background: rgba(0,0,0,0.8);
  margin: 0;
  padding: 10px;
  font-weight: bold;
}
.align-center {
  text-align: center;
}
pre {
  white-space: pre-wrap; 
}
.table {
  overflow: auto;
}
table {
  background: #2d2d2d;
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
}
tr:nth-child(odd) {
  background-color: #323232;
}
th td {
  text-align: center;
}
td.top {
  background: whitesmoke;
  font-weight: bold;
  position: relative;
}
td.top i {
  margin-right: 5px;
}
td {
  -webkit-transition: width 1s;
  transition: width 1s;
}
td.top:hover {
  background: rgba(0,0,0,0.2);
  cursor: pointer;
}
td.top.expanded {
  background: rgba(0,0,0,0.2);
  width: 70%;
}
td {
  word-wrap:break-word;
  font-size: 12px;
  /*border: 1px solid whitesmoke;*/
  padding: 5px;
  color: rgba(0,0,0,0.7);
}
.btn {
  padding: 5px 20px;
  border-radius: 2px;
  text-decoration: none;
  border: 2px solid #2a2a2a;
}
.btn-border {
  color: #2a2a2a;
}
.btn-filled {
  background: #2a2a2a;
  color: #ffffff;
}
#editor {
  width: 100%;
}
.label {
  background: ##fff6d4;
  color: #5c5454;
  padding: 5px 10px;
}
button {
    padding: 10px;
    background: #596a9d;
    color: #fff;
    border: none;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
}
button:focus {
  outline: 0;
}
.spinner {
  color: white;
  text-align: center;
  padding: 100px;
}
input.url:focus{
  outline: none;
}
input.url {
  padding: 10px;
  background-color: #eae1bd;
  color: #504c4c;
  border: none;
  font-family: Menlo, monaco, Courier;
  font-size: 11px;
  transition: background 1000ms ease-in;
  border-radius: 0;
  -webkit-appearance:none;
}
input.url.updated {
  background: gold;
}
a.brand {
  margin: 10px;
  font-size: 16px;
  font-family: "Helvetica Neue", helvetica, arial;
}
.flex {
  display: flex;
}
.label {
  padding: 10px;
}
main {
  margin-bottom:6rem;
}
.date-td {
  text-align: center;
  vertical-align:top;
  width: 5rem;
  color: #f1f1f1;
}
</style>

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
<link rel="stylesheet" href="/jsontree.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/mode-json.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.11/handlebars.min.js"></script>
<script src="/jsontree.js"></script>
<script id="grid-template" type="text/x-handlebars-template">
  <table>
    <thead>
      <tr>
        {{#each keys}}
          <td class='top {{this}}'><i class='fas fa-expand-arrows-alt'></i>{{this}}</td>
        {{/each}}
      </tr>
    </thead>
    <tbody id="clusterize_content_unconfirmed" class="clusterize-content">
    </tbody>
  </table>
</script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>
<body>
  <div class='container'>
    <header>
      <a href='/' class='brand'>Sockserve Fountainhead</a>
      <div class='flexible'></div>
      <a target='_blank' href='https://docs.fountainhead.cash' class='item'><i class='fas fa-book'></i> Documentation</a>
    </header>
    <div class='jumbotron align-center header'>
      <div id='editor'><%=code%></div>
      <div class='flex'>
        <span class='label'>API endpoint</span>
        <input readonly class='flexible url'>
        <button id='query'>Run query</button>
      </div>
    </div>
  </div>
  <main>
    <div id='channel'>
      <div class='content'>
        <table>
          <tbody id="channel-content-area">
          </tbody>
        </table>
      </div>
    </div>
  </main>
</body>
<script>

var endpoint = '<%=bitserve_url%>';
var source   = document.getElementById("grid-template").innerHTML;
var template = Handlebars.compile(source);
var editor;
document.addEventListener("DOMContentLoaded", function(e) {
  editor = ace.edit("editor");
  editor.session.setMode("ace/mode/json");
  editor.setTheme("ace/theme/twilight");
  editor.setShowPrintMargin(false);
  editor.setOptions({
    maxLines: Infinity,
    minLines: 3,
    tabSize: 2,
    useSoftTabs: true
  })
  editor.getSession().on('change', function() {
    var query = editor.getValue();
    history.pushState(null, null, window.location.origin + "/channel/" + btoa(query));
    updateUrl(query)
  })
  run()
  document.querySelector("#query").addEventListener("click", function(e) {
    run()
  })
  document.body.addEventListener("click", function(e) {
    if (e.target.classList.contains("top")) {
      if (e.target.classList.contains("expanded")) {
        e.target.classList.remove("expanded");
      } else {
        e.target.classList.add("expanded");
      }
    }
  })
})
let bitsocket = null;
var run = function() {
  var query = editor.getValue();
  console.log("query = ", query)
  if (query && query.length > 0) {
    try {
      // make sure it's JSON
      var parsed = JSON.parse(query)
      console.log(parsed)

      if ((parsed && parsed.request) || (parsed && parsed.v) ) {
        updateUrl(query)

        if (bitsocket !== null) {
            bitsocket.close()
        }

        bitsocket = new EventSource(endpoint + btoa(query));
        bitsocket.onmessage = function(e) {
          let data = JSON.parse(e.data);
          let tbody = document.getElementById('channel-content-area');
          let tr = tbody.insertRow(-1); // put at start
          let node = document.createElement('tr');
          node.innerHTML = render(data);
          tr.parentNode.prepend(node);
        }
      }
    } catch (e) {
      console.log("query invalid json", e)
    }
  }
}
var updateUrl = function(query) {
  var base64 = btoa(query)
  var u = document.querySelector(".url");
  u.value = endpoint + base64;
  u.classList.add("updated");
  setTimeout(function() {
    u.classList.remove("updated");
  }, 500)
}

var render = function(item) {
  return "<td class='main-td'>"+JSONTree.create(item)+"</td><td class='date-td'>"+((new Date).toLocaleTimeString())+"</td>";
}
</script>
</html>
